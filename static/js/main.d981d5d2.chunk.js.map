{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","services/pixabayApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","params","key","image_type","orientation","fetchImages","a","query","page","pageSize","get","data","hits","toast","error","propTypes","PropTypes","string","isRequired","number","Searchbar","state","handleQueryChange","event","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","warning","className","s","SearchForm","this","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","onSetImgData","onOpenModal","src","alt","ImageGalleryItem__image","onClick","ImageGallery","images","length","map","id","Button","onClickHandler","App","loaderContainer","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","children","isLoading","showModal","imgTags","handleFormSubmit","options","pixabayApi","then","prevState","scrollToButtom","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","setImgData","prevProps","shouldRenderLoadMoreBtn","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d981d5d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__hrfPL\",\"SearchForm\":\"Searchbar_SearchForm__1WYEE\",\"SearchForm__button\":\"Searchbar_SearchForm__button__1yDO4\",\"SearchForm__buttonLabel\":\"Searchbar_SearchForm__buttonLabel__C6pel\",\"SearchForm__input\":\"Searchbar_SearchForm__input__3kU8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__UjQmn\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__2dKjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__mFno9\",\"Modal\":\"Modal_Modal__2dY2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__P4QfT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1miNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__3icNZ\"};","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '18773042-c85a376c8239f0d185771db9c';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n};\n\nconst fetchImages = async ({ query = '', page = 1, pageSize = 15 }) => {\n  try {\n    const { data } = await axios.get(\n      `?q=${query}&page=${page}&per_page=${pageSize}`,\n    );\n    return data.hits;\n  } catch (error) {\n    toast.error('Failed to connect to server');\n    return [];\n  }\n};\n\nfetchImages.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default fetchImages;\n","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryChange = event => {\n    this.setState({ query: event.target.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { query } = this.state;\n\n    if (query.trim() === '') {\n      toast.warning('Enter query name');\n      return;\n    }\n\n    this.props.onSubmit(query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchForm__button}>\n            <span className={s.SearchForm__buttonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchForm__input}\n            value={this.state.query}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleQueryChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  tags = '',\n  onSetImgData,\n  onOpenModal,\n}) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={s.ImageGalleryItem__image}\n        onClick={() => {\n          onSetImgData({ largeImageURL, tags });\n          onOpenModal();\n        }}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onSetImgData: PropTypes.func.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ images, onSetImgData, onOpenModal }) => {\n  if (images.length === 0) return null;\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onSetImgData={onSetImgData}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n  onSetImgData: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClickHandler }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClickHandler}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={s.loaderContainer}>\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  handleBackdropClick = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport pixabayApi from './services/pixabayApi';\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    query: 'new year',\n    images: [],\n    isLoading: false,\n    page: 1,\n    pageSize: 15,\n    error: null,\n    showModal: false,\n    largeImageURL: '',\n    imgTags: null,\n  };\n\n  componentDidMount() {\n    this.fetchImages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n  }\n\n  handleFormSubmit = query => {\n    if (this.state.query === query) {\n      return;\n    }\n\n    this.setState({ query: query, page: 1, images: [], error: null });\n  };\n\n  fetchImages = () => {\n    const { page, query, pageSize } = this.state;\n    const options = { page, query, pageSize };\n\n    this.setState({ isLoading: true });\n\n    pixabayApi(options)\n      .then(images => {\n        if (images.length < 1) {\n          this.setState({ error: true });\n        } else {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images],\n            page: prevState.page + 1,\n          }));\n        }\n        if (page !== 1) {\n          this.scrollToButtom();\n        }\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  scrollToButtom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  setImgData = ({ largeImageURL, tags }) => {\n    this.setState({ largeImageURL, tags });\n  };\n\n  render() {\n    const {\n      images,\n      isLoading,\n      error,\n      showModal,\n      largeImageURL,\n      imgTags,\n    } = this.state;\n    const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {error && <p className=\"text-error\">404</p>}\n        <ImageGallery\n          images={images}\n          onOpenModal={this.toggleModal}\n          onSetImgData={this.setImgData}\n        />\n        {shouldRenderLoadMoreBtn && (\n          <Button onClickHandler={this.fetchImages} />\n        )}\n        {isLoading && <Loader />}\n        {showModal && (\n          <Modal onCloseModal={this.toggleModal}>\n            <img src={largeImageURL} alt={imgTags} />\n          </Modal>\n        )}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}